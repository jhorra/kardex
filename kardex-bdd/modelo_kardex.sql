DROP TRIGGER TGR_EMPRESA_INS;
DROP TRIGGER TGR_MARCA_INS;
DROP TRIGGER TGR_PRODUCTO_INS;
DROP TRIGGER TGR_ROL_INS;
DROP TRIGGER TGR_SUCURSAL_INS;
DROP TRIGGER TGR_TIPOPRODUCTO_INS;
DROP TRIGGER TGR_USUARIO_INS;

DROP TABLE INVENTARIO;
DROP TABLE USUARIO_ROL;
DROP TABLE USUARIO;
DROP TABLE ROL;
DROP TABLE PRODUCTO;
DROP TABLE TIPO_PRODUCTO;
DROP TABLE MARCA;
DROP TABLE SUCURSAL;
DROP TABLE EMPRESA;

DROP SEQUENCE EMPRESA_SEQ;
DROP SEQUENCE INVENTARIO_SEQ;
DROP SEQUENCE MARCA_SEQ;
DROP SEQUENCE PRODUCTO_SEQ; 
DROP SEQUENCE ROL_SEQ;
DROP SEQUENCE SUCURSAL_SEQ; 
DROP SEQUENCE TIPOPRODUCTO_SEQ;
DROP SEQUENCE USUARIO_SEQ;
DROP SEQUENCE USUARIOROL_SEQ;

CREATE TABLE EMPRESA
  (
    ID     NUMBER NOT NULL ,
    NOMBRE VARCHAR2 (50) ,
    ESTADO VARCHAR2 (1)
  ) ;
  
COMMENT ON TABLE EMPRESA
IS
  'EMPRESA' ;
  COMMENT ON COLUMN EMPRESA.ID
IS
  'ID DE LA EMPRESA' ;
  COMMENT ON COLUMN EMPRESA.NOMBRE
IS
  'NOMBRE DE LA EMPRESA' ;
  COMMENT ON COLUMN EMPRESA.ESTADO
IS
  'ESTADO:
- I INACTIVO
- A ACTIVO' ;

ALTER TABLE EMPRESA ADD CONSTRAINT EMPRESA_PK PRIMARY KEY ( ID ) ;


--  TABLA INVENTARIO
CREATE TABLE INVENTARIO
  (
    SUCURSAL_ID NUMBER NOT NULL ,
    PRODUCTO_ID NUMBER NOT NULL ,
    CANTIDAD    NUMBER,
	CANTIDAD_SALIENTE NUMBER
  ) ;
  
COMMENT ON TABLE INVENTARIO
IS
  'INVENTARIO DE LA EMPRESA' ;
  COMMENT ON COLUMN INVENTARIO.SUCURSAL_ID
IS
  'CODIGO DE SUCURSAL' ;
  COMMENT ON COLUMN INVENTARIO.PRODUCTO_ID
IS
  'ID DE PRODUCTO' ;
  COMMENT ON COLUMN INVENTARIO.CANTIDAD
IS
  'CANTIDAD DE UN PRODUCTO POR SUCURSAL' ;
  COMMENT ON COLUMN INVENTARIO.CANTIDAD
IS
  'CANTIDAD SALIENTE DE UN PRODUCTO POR SUCURSAL' ;  
ALTER TABLE INVENTARIO ADD CONSTRAINT INVENTARIO_PK PRIMARY KEY ( SUCURSAL_ID, PRODUCTO_ID ) ;


--  TABLA MARCA
CREATE TABLE MARCA
  (
    ID     NUMBER NOT NULL ,
    NOMBRE VARCHAR2 (50) NOT NULL ,
    ESTADO VARCHAR2 (1)
  ) ;
  
COMMENT ON TABLE MARCA
IS
  'MARCA DEL PRODUCTO' ;
  COMMENT ON COLUMN MARCA.ID
IS
  'ID DE LA MARCA' ;
  COMMENT ON COLUMN MARCA.NOMBRE
IS
  'NOMBRE DE LA MARCA:
- MARVEL
- DC COMICS
- VARIOS
' ;
  COMMENT ON COLUMN MARCA.ESTADO
IS
  'ESTADO:
- I INACTIVO
- A ACTIVO' ;
ALTER TABLE MARCA ADD CONSTRAINT PRODUCTO_TIPO_PK PRIMARY KEY ( ID ) ;


--  TABLA PRODUCTO
CREATE TABLE PRODUCTO
  (
    ID               NUMBER NOT NULL ,
    NOMBRE           VARCHAR2 (50) ,
    ESTADO           VARCHAR2 (1) ,
    PRECIO           NUMBER ,
    CANTIDAD         NUMBER ,
    MARCA_ID         NUMBER NOT NULL ,
    TIPO_PRODUCTO_ID NUMBER NOT NULL
  ) ;
COMMENT ON TABLE PRODUCTO
IS
  'PRODUCTO' ;
  COMMENT ON COLUMN PRODUCTO.ID
IS
  'Id del producto' ;
  COMMENT ON COLUMN PRODUCTO.ESTADO
IS
  'ESTADO:
- I INACTIVO
- A ACTIVO' ;
  COMMENT ON COLUMN PRODUCTO.PRECIO
IS
  'PRECIO DEL PRODUCTO' ;
  COMMENT ON COLUMN PRODUCTO.CANTIDAD
IS
  'CANTITAD TOTAL DEL PRODUCTO' ;
ALTER TABLE PRODUCTO ADD CONSTRAINT PRODUCTO_PK PRIMARY KEY ( ID ) ;


--  TABLA ROL
CREATE TABLE ROL
  (
    ID     NUMBER NOT NULL ,
    NOMBRE VARCHAR2 (50) ,
    ESTADO VARCHAR2 (1)
  ) ;
COMMENT ON TABLE ROL
IS
  'ROL' ;
  COMMENT ON COLUMN ROL.ID
IS
  'ID DEL ROL' ;
  COMMENT ON COLUMN ROL.NOMBRE
IS
  'NOMBRE DEL ROL' ;
  COMMENT ON COLUMN ROL.ESTADO
IS
  'ESTADO DEL ROL:
- I INACTIVO
- A ACTIVO' ;
ALTER TABLE ROL ADD CONSTRAINT ROL_PK PRIMARY KEY ( ID ) ;


--  TABLA SUCURSAL
CREATE TABLE SUCURSAL
  (
    ID         NUMBER NOT NULL ,
    EMPRESA_ID NUMBER NOT NULL ,
    NOMBRE     VARCHAR2 (50) ,
    ESTADO     VARCHAR2 (1)
  ) ;
COMMENT ON TABLE SUCURSAL
IS
  'SUCURSAL DE LA EMPRESA' ;
  COMMENT ON COLUMN SUCURSAL.ID
IS
  'ID DE LA SUCURSAL' ;
  COMMENT ON COLUMN SUCURSAL.EMPRESA_ID
IS
  'ID DE DE LA EMPRESA' ;
  COMMENT ON COLUMN SUCURSAL.NOMBRE
IS
  'NOMBRE DE LA SUCURSAL' ;
  COMMENT ON COLUMN SUCURSAL.ESTADO
IS
  'ESTADO:
- I INACTIVO
- A ACTIVO' ;
ALTER TABLE SUCURSAL ADD CONSTRAINT SUCURSAL_PK PRIMARY KEY ( ID ) ;


--  TABLA TIPO DE PRODUCTO
CREATE TABLE TIPO_PRODUCTO
  (
    ID     NUMBER NOT NULL ,
    NOMBRE VARCHAR2 (50) ,
    ESTADO VARCHAR2 (1)
  ) ;
COMMENT ON TABLE TIPO_PRODUCTO
IS
  'TIPO DE PRODUCTO' ;
  COMMENT ON COLUMN TIPO_PRODUCTO.ID
IS
  'ID DEL TIPO DE PRODUCTO' ;
  COMMENT ON COLUMN TIPO_PRODUCTO.NOMBRE
IS
  'NOMBRE DEL TIPO DE PRODUCTO:
- CAMISETAS
- JUGUETES
- VIDEO JUEGOS' ;
  COMMENT ON COLUMN TIPO_PRODUCTO.ESTADO
IS
  'ESTADO:
- I INACTIVO
- A ACTIVO' ;
ALTER TABLE TIPO_PRODUCTO ADD CONSTRAINT TIPO_PRODUCTO_PK PRIMARY KEY ( ID ) ;


--  TABLA USUARIO
CREATE TABLE USUARIO
  (
    ID               NUMBER NOT NULL ,
    NOMBRE           VARCHAR2 (50) ,
    ESTADO           VARCHAR2 (1) ,
    FECHA_CREACION   TIMESTAMP ,
    FECHA_EXPIRACION TIMESTAMP ,
    APELLIDO         VARCHAR2 (50) ,
    USUARIO          VARCHAR2 (50) ,
    CONTRASENA       VARCHAR2 (20)
  ) ;
COMMENT ON TABLE USUARIO
IS
  'USUARIOS' ;
  COMMENT ON COLUMN USUARIO.ID
IS
  'ID DEL USUARIO' ;
  COMMENT ON COLUMN USUARIO.NOMBRE
IS
  'NOMBRE DEL USUARIO' ;
  COMMENT ON COLUMN USUARIO.ESTADO
IS
  'ESTADO DEL USUARIO:
- I INACTIVO
- A ACTIVO' ;
  COMMENT ON COLUMN USUARIO.FECHA_CREACION
IS
  'FECHA DE CREACION DEL USUARIO' ;
  COMMENT ON COLUMN USUARIO.FECHA_EXPIRACION
IS
  'FECHA DE DE EXPIRACION O VIGENCIA PARA ACCEDER  A LA APP.' ;
  COMMENT ON COLUMN USUARIO.APELLIDO
IS
  'APELLIDO DEL USUARIO' ;
  COMMENT ON COLUMN USUARIO.USUARIO
IS
  'USUARIO CON EL QUE INGRESA A LA APP.' ;
  COMMENT ON COLUMN USUARIO.CONTRASENA
IS
  'CONTRASEÑA DEL USUARIO PARA AUTENTICARE EN LA APP.' ;
ALTER TABLE USUARIO ADD CONSTRAINT USUARIO_PK PRIMARY KEY ( ID ) ;


--  TABAL RELACION USUARIO Y ROL
CREATE TABLE USUARIO_ROL
  (
    USUARIO_ID NUMBER NOT NULL ,
    ROL_ID     NUMBER NOT NULL
  ) ;
COMMENT ON TABLE USUARIO_ROL
IS
  'TABAL RELACION USUARIO Y ROL' ;
  COMMENT ON COLUMN USUARIO_ROL.USUARIO_ID
IS
  'ID DEL USUARIO' ;
  COMMENT ON COLUMN USUARIO_ROL.ROL_ID
IS
  'ID DEL ROL' ;
ALTER TABLE USUARIO_ROL ADD CONSTRAINT USUARIO_ROL_PK PRIMARY KEY ( USUARIO_ID, ROL_ID ) ;


ALTER TABLE INVENTARIO ADD CONSTRAINT INVENTARIO_PRODUCTO_FK FOREIGN KEY ( PRODUCTO_ID ) REFERENCES PRODUCTO ( ID ) ;

ALTER TABLE INVENTARIO ADD CONSTRAINT INVENTARIO_SUCURSAL_FK FOREIGN KEY ( SUCURSAL_ID ) REFERENCES SUCURSAL ( ID ) ;

ALTER TABLE PRODUCTO ADD CONSTRAINT PRODUCTO_MARCA_FK FOREIGN KEY ( MARCA_ID ) REFERENCES MARCA ( ID ) ;

ALTER TABLE PRODUCTO ADD CONSTRAINT PRODUCTO_TIPO_PRODUCTO_FK FOREIGN KEY ( TIPO_PRODUCTO_ID ) REFERENCES TIPO_PRODUCTO ( ID ) ;

ALTER TABLE SUCURSAL ADD CONSTRAINT SUCURSAL_EMPRESA_FK FOREIGN KEY ( EMPRESA_ID ) REFERENCES EMPRESA ( ID ) ;

ALTER TABLE USUARIO_ROL ADD CONSTRAINT USUARIO_ROL_ROL_FK FOREIGN KEY ( ROL_ID ) REFERENCES ROL ( ID ) ;

ALTER TABLE USUARIO_ROL ADD CONSTRAINT USUARIO_ROL_USUARIO_FK FOREIGN KEY ( USUARIO_ID ) REFERENCES USUARIO ( ID ) ;


CREATE SEQUENCE EMPRESA_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
CREATE SEQUENCE INVENTARIO_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
CREATE SEQUENCE MARCA_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
CREATE SEQUENCE PRODUCTO_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
CREATE SEQUENCE ROL_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
CREATE SEQUENCE SUCURSAL_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;  
  
CREATE SEQUENCE TIPOPRODUCTO_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
CREATE SEQUENCE USUARIO_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
CREATE SEQUENCE USUARIOROL_SEQ 
  MINVALUE 1
  MAXVALUE 100000
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
CREATE OR REPLACE TRIGGER TGR_EMPRESA_INS
  BEFORE INSERT ON EMPRESA
  FOR EACH ROW
DECLARE
BEGIN
  DBMS_APPLICATION_INFO.set_module(module_name => 'BEFORE INSERT',
                                   action_name => 'TGR_EMPRESA_INS');

  :new.id := empresa_seq.NEXTVAL;

  DBMS_APPLICATION_INFO.set_module(NULL, NULL);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_APPLICATION_INFO.set_module(NULL, NULL);
    RAISE;
END TGR_EMPRESA_INS;
/

CREATE OR REPLACE TRIGGER TGR_MARCA_INS
  BEFORE INSERT ON MARCA
  FOR EACH ROW
DECLARE
BEGIN
  DBMS_APPLICATION_INFO.set_module(module_name => 'BEFORE INSERT',
                                   action_name => 'TGR_MARCA_INS');

  :new.id := marca_seq.NEXTVAL;

  DBMS_APPLICATION_INFO.set_module(NULL, NULL);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_APPLICATION_INFO.set_module(NULL, NULL);
    RAISE;
END TGR_MARCA_INS;
/

CREATE OR REPLACE TRIGGER TGR_PRODUCTO_INS
  BEFORE INSERT ON PRODUCTO
  FOR EACH ROW
DECLARE
BEGIN
  DBMS_APPLICATION_INFO.set_module(module_name => 'BEFORE INSERT',
                                   action_name => 'TGR_PRODUCTO_INS');

  :new.id := producto_seq.NEXTVAL;

  DBMS_APPLICATION_INFO.set_module(NULL, NULL);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_APPLICATION_INFO.set_module(NULL, NULL);
    RAISE;
END TGR_PRODUCTO_INS;
/

CREATE OR REPLACE TRIGGER TGR_ROL_INS
  BEFORE INSERT ON ROL
  FOR EACH ROW
DECLARE
BEGIN
  DBMS_APPLICATION_INFO.set_module(module_name => 'BEFORE INSERT',
                                   action_name => 'TGR_ROL_INS');

  :new.id := rol_seq.NEXTVAL;

  DBMS_APPLICATION_INFO.set_module(NULL, NULL);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_APPLICATION_INFO.set_module(NULL, NULL);
    RAISE;
END TGR_ROL_INS;
/

CREATE OR REPLACE TRIGGER TGR_SUCURSAL_INS
  BEFORE INSERT ON SUCURSAL
  FOR EACH ROW
DECLARE
BEGIN
  DBMS_APPLICATION_INFO.set_module(module_name => 'BEFORE INSERT',
                                   action_name => 'TGR_SUCURSAL_INS');

  :new.id := sucursal_seq.NEXTVAL;

  DBMS_APPLICATION_INFO.set_module(NULL, NULL);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_APPLICATION_INFO.set_module(NULL, NULL);
    RAISE;
END TGR_SUCURSAL_INS;
/

CREATE OR REPLACE TRIGGER TGR_TIPOPRODUCTO_INS
  BEFORE INSERT ON TIPO_PRODUCTO
  FOR EACH ROW
DECLARE
BEGIN
  DBMS_APPLICATION_INFO.set_module(module_name => 'BEFORE INSERT',
                                   action_name => 'TGR_TIPOPRODUCTO_INS');

  :new.id := tipoproducto_seq.NEXTVAL;

  DBMS_APPLICATION_INFO.set_module(NULL, NULL);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_APPLICATION_INFO.set_module(NULL, NULL);
    RAISE;
END TGR_TIPOPRODUCTO_INS;
/

CREATE OR REPLACE TRIGGER TGR_USUARIO_INS
  BEFORE INSERT ON USUARIO
  FOR EACH ROW
DECLARE
BEGIN
  DBMS_APPLICATION_INFO.set_module(module_name => 'BEFORE INSERT',
                                   action_name => 'TGR_USUARIO_INS');

  :new.id := usuario_seq.NEXTVAL;

  DBMS_APPLICATION_INFO.set_module(NULL, NULL);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_APPLICATION_INFO.set_module(NULL, NULL);
    RAISE;
END TGR_USUARIO_INS;
/

INSERT INTO EMPRESA VALUES (1, 'SUPERHEROES', 'A');
INSERT INTO EMPRESA VALUES (1, 'DE TODO PARA TODOS', 'A');
INSERT INTO SUCURSAL VALUES (1, 1, 'CENTRO NORTE', 'A');
INSERT INTO SUCURSAL VALUES (1, 2, 'SUR', 'A');
INSERT INTO MARCA VALUES (1, 'MARVEL', 'A');
INSERT INTO MARCA VALUES (1, 'DC COMICS', 'A');
INSERT INTO TIPO_PRODUCTO VALUES (1, 'CAMISETAS', 'A');
INSERT INTO TIPO_PRODUCTO VALUES (1, 'VASOS', 'A');
INSERT INTO TIPO_PRODUCTO VALUES (1, 'JUGUETES', 'A');
INSERT INTO TIPO_PRODUCTO VALUES (1, 'COMICS', 'A');
COMMIT;